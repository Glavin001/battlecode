What needs to be done, and what can be augmented in parallel?

pathfinding
Bug pathing. a*?

exploration algorithm
how do we find interesting things on the map?
Do we want to compute the map dimensions ourselves?
Do we want some kind of node-based approach for exploration and movement? (Ant-colony)

viper harassment AI

communication 

Problems Solved:
Moving only done once, then break
Attacking must use attack sensor range!
Actually have to get rid of rubble

Interesting properties of game:

Hotkeys:
Show debug indicator dots: v
Forward 100 turns: s
Back 50 turns: i
Movement lines: h
Grid: g
HP bars: e
Show attack/sense range on mouse highlight: r

You can broadcast to an infinite range, with scaling core delay cost.
The map is 30x30 to 100x100 rect, no obstacles other than rubble.
Zombies are not impeded by rubble.
Only scouts and archons can send messages, any robot can receive.
Signals by default include the sender location, id and team.
Harvestabe parts are denoted by a small purple circle on location they reside at.
To collect parts on the map, archon needs only to move over them.
Unlike vipers, normal infection does not cause damage over time.
Viper DOT does not stack.
Bytecode limit per round of 20k for archons, scouts; 10k for all others.
Robots have no way of knowing if another round happens other than using clock.yield() ! This means we have to be careful when programming robots that are capable of going over their bytecode limits.
We can save and load into memory between rounds as a well to implement learning AIs
Go to Window->Preferences->General->Keys to setup a hotkey for "Run last launched external tool"
Game is funky on 2 monitors, has initial display issues when not on primary monitor (As they are 'hooked up', not the main monitor setting in windows!)
Max Core delay incurred by transmitted a broadcast is ~11-12.
Looks like there is a maximum of 3 indicator string on each unit.





